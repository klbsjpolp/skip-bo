@import 'tailwindcss';

@plugin 'tailwindcss-animate';

@custom-variant dark (&:is(.dark *));

@theme {
  --color-border: var(--border);
  --color-input: var(--input);
  --color-ring: var(--ring);
  --color-background: var(--background);
  --color-foreground: var(--foreground);

  --color-primary: var(--primary);
  --color-primary-foreground: var(--primary-foreground);

  --color-secondary: var(--secondary);
  --color-secondary-foreground: var(--secondary-foreground);

  --color-destructive: var(--destructive);
  --color-destructive-foreground: var(--destructive-foreground);

  --color-muted: var(--muted);
  --color-muted-foreground: var(--muted-foreground);

  --color-accent: var(--accent);
  --color-accent-foreground: var(--accent-foreground);

  --color-popover: var(--popover);
  --color-popover-foreground: var(--popover-foreground);

  --color-card: var(--card);
  --color-card-foreground: var(--card-foreground);

  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);

  --animate-accordion-down: accordion-down 0.2s ease-out;
  --animate-accordion-up: accordion-up 0.2s ease-out;

  /*@keyframes accordion-down {
    from {
      height: 0;
    }
    to {
      height: var(--radix-accordion-content-height);
    }
  }
  @keyframes accordion-up {
    from {
      height: var(--radix-accordion-content-height);
    }
    to {
      height: 0;
    }
  }*/
}

@utility container {
  margin-inline: auto;
  padding-inline: 2rem;
  @media (width >= --theme(--breakpoint-sm)) {
    max-width: none;
  }
  @media (width >= 1400px) {
    max-width: 1400px;
  }
}

/*
  The default border color has changed to `currentcolor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentcolor);
  }
}

@layer base {
  :root {
    /* Tailwind CSS variables */
    --background: hsl(0 0% 100%);
    --foreground: hsl(0 0% 3.9%);
    --card: hsl(0 0% 100%);
    --card-foreground: hsl(0 0% 3.9%);
    --popover: hsl(0 0% 100%);
    --popover-foreground: hsl(0 0% 3.9%);
    --primary: hsl(0 0% 9%);
    --primary-foreground: hsl(0 0% 98%);
    --secondary: hsl(0 0% 96.1%);
    --secondary-foreground: hsl(0 0% 9%);
    --muted: hsl(0 0% 96.1%);
    --muted-foreground: hsl(0 0% 45.1%);
    --accent: hsl(0 0% 96.1%);
    --accent-foreground: hsl(0 0% 9%);
    --destructive: hsl(0 84.2% 60.2%);
    --destructive-foreground: hsl(0 0% 98%);
    --border: hsl(0 0% 89.8%);
    --input: hsl(0 0% 89.8%);
    --ring: hsl(0 0% 3.9%);
    --radius: 0.5rem;

    /* Skip-Bo game theme variables - Light theme (default) */
    --bg-color: #e5e7eb;
    --zone-bg-color: #f9fafb;
    --text-color: #374151;
    --title-color: #374151;
    --card-bg: white;
    --card-border: #9ca3af;
    --card-shadow: 0 1px 3px rgba(0,0,0,0.2);
    --card-radius: 8px;
    --deck-bg: #3b82f6;
    --selected-border: #f59e0b;
    --active-turn-color: #22c55e;
    --button-bg: #4f46e5;
    --button-hover-bg: #4338ca;
  
    /* Card color ranges */
    --skipbo-text: #FFD97D;
    --card-g1: hsl(152 69% 58%);   /* 1‑4 */
    --card-g2: hsl(0 80% 60%);     /* 5‑8 */
    --card-g3: hsl(283 55% 57%);   /* 9‑12 */
  }

  .dark {
    /* Tailwind CSS variables for dark theme */
    --background: hsl(0 0% 3.9%);
    --foreground: hsl(0 0% 98%);
    --card: hsl(0 0% 3.9%);
    --card-foreground: hsl(0 0% 98%);
    --popover: hsl(0 0% 3.9%);
    --popover-foreground: hsl(0 0% 98%);
    --primary: hsl(0 0% 98%);
    --primary-foreground: hsl(0 0% 9%);
    --secondary: hsl(0 0% 14.9%);
    --secondary-foreground: hsl(0 0% 98%);
    --muted: hsl(0 0% 14.9%);
    --muted-foreground: hsl(0 0% 63.9%);
    --accent: hsl(0 0% 14.9%);
    --accent-foreground: hsl(0 0% 98%);
    --destructive: hsl(0 62.8% 30.6%);
    --destructive-foreground: hsl(0 0% 98%);
    --border: hsl(0 0% 14.9%);
    --input: hsl(0 0% 14.9%);
    --ring: hsl(0 0% 83.1%);

    /* Skip-Bo game theme variables - Dark theme */
    --bg-color: #111827;
    --zone-bg-color: #1f2937;
    --text-color: #d1d5db;
    --title-color: #f9fafb;
    --card-bg: #374151;
    --card-border: #6b7280;
    --deck-bg: #1d4ed8;
    --selected-border: #f59e0b;
    --active-turn-color: #4ade80;
    --button-bg: #6366f1;
    --button-hover-bg: #4f46e5;
    
    /* Card color ranges - same as light theme */
    --skipbo-text: #FFD97D;
    --card-g1: hsl(152 69% 58%);
    --card-g2: hsl(0 80% 60%);
    --card-g3: hsl(283 55% 57%);
  }

  .metro {
    --primary: hsl(160 100% 32%);
    --primary-foreground: hsl(0 0% 100%);
    --secondary: hsl(0 100% 45%);
    --secondary-foreground: hsl(0 0% 100%);

    /* Skip-Bo game theme variables - Metro theme */
    --bg-color: #1d1d1d;
    --zone-bg-color: #2d2d2d;
    --text-color: #ffffff;
    --title-color: #ffffff;
    --card-bg: #3c3c3c;
    --card-border: #5e5e5e;
    --card-shadow: none;
    --card-radius: 2px;
    --deck-bg: #00a3a3;
    --selected-border: #1ba1e2;
    --active-turn-color: #60a917;
    --button-bg: #60a917;
    --button-hover-bg: #4c8712;
    
    /* Card color ranges - Metro theme */
    --skipbo-text: hsl(0 0% 85%);  /* Silver/light gray that complements the bold primary colors */
    --card-g1: #00befc;
    --card-g2: #ff3b30;
    --card-g3: #ffd426;
  }

  .neon {
    --primary: hsl(157 100% 50%);
    --primary-foreground: hsl(0 0% 0%);
    --secondary: hsl(324 100% 50%);
    --secondary-foreground: hsl(0 0% 100%);

    /* Skip-Bo game theme variables - Neon theme */
    --bg-color: #0a0a0a;
    --zone-bg-color: #1a1a1a;
    --text-color: #00ff88;
    --title-color: #ff0099;
    --card-bg: #1a1a1a;
    --card-border: #00ff88;
    --card-shadow: 0 0 10px rgba(0,255,136,0.3);
    --card-radius: 12px;
    --deck-bg: #0066ff;
    --selected-border: #ffff00;
    --active-turn-color: #00ff88;
    --button-bg: #ff0099;
    --button-hover-bg: #cc0077;
    
    /* Card color ranges - Neon theme */
    --skipbo-text: hsl(60 100% 60%);  /* Bright yellow that complements the neon palette */
    --card-g1: #00ff88;
    --card-g2: #ff0099;
    --card-g3: #0066ff;
  }

  .retro {
    --primary: hsl(174 59% 39%);
    --primary-foreground: hsl(0 0% 100%);
    --secondary: hsl(11 83% 62%);
    --secondary-foreground: hsl(0 0% 100%);

    /* Skip-Bo game theme variables - Retro theme */
    --bg-color: #f4f1de;
    --zone-bg-color: #e9c46a;
    --text-color: #264653;
    --title-color: #2a9d8f;
    --card-bg: #f4a261;
    --card-border: #e76f51;
    --card-shadow: 0 2px 4px rgba(0,0,0,0.1);
    --card-radius: 15px;
    --deck-bg: #2a9d8f;
    --selected-border: #e9c46a;
    --active-turn-color: #264653;
    --button-bg: #2a9d8f;
    --button-hover-bg: #21867a;
    
    /* Card color ranges - Retro theme */
    --skipbo-text: hsl(40 80% 80%);  /* Warm cream color that fits the vintage palette */
    --card-g1: #2a9d8f;
    --card-g2: #e76f51;
    --card-g3: #264653;
  }

  body {
    font-family: 'Inter', sans-serif;
    background-color: var(--bg-color);
    color: var(--text-color);
  }

  h3 {
   font-weight: bold;
 }
}

@layer utilities {
  .card,
  .card-height {
    height: 100px;
  }

  /* Custom Skip-Bo card styles */
  .card {
    @apply text-center leading-none;
    border: 1px solid var(--card-border);
    border-radius: var(--card-radius);
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 24px;
    font-weight: bold;
    cursor: pointer;
    user-select: none;
    background-color: var(--card-bg);
    transition: all 0.2s ease-in-out;
    position: relative;
    color: var(--text-color);
    box-shadow: var(--card-shadow);
    transform-origin: bottom center;
    /* Custom properties for transforms */
    --card-rotate: 0deg;
    --card-translate-y: 0px;
    --card-scale: 1;
    transform: translateY(var(--card-translate-y)) scale(var(--card-scale))
      rotate(var(--card-rotate));
  }

  /* Consistent hover effects for all selectable cards */
  .hoverable-card:hover {
    --card-translate-y: -2px;
    --card-scale: 1.05;
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
    transition: all 0.2s ease-in-out;
  }

  /* Card range utility classes */
  .card-range-1 {
    @apply text-(--card-g1);
  }

  .card-range-2 {
    @apply text-(--card-g2);
  }

  .card-range-3 {
    @apply text-(--card-g3);
  }

  .skipbo-text {
    @apply text-(--skipbo-text);
  }

  .card.back {
    background-color: var(--deck-bg);
    color: white;
  }

  /* Selected cards should pop up more and override hover */
  .card.selected {
    border-color: var(--selected-border);
    --card-translate-y: -5px;
    box-shadow: 0 4px 15px var(--selected-border);
  }

  /* Drop target indicator should only show on hover */
  .drop-target-hover:hover::before {
    content: '';
    position: absolute;
    top: -3px;
    left: 0;
    right: 0;
    height: 3px;
    background-color: var(--selected-border);
    border-radius: 2px;
    opacity: 0.8;
    z-index: 10;
  }

  /* Enhanced drop indicators */
  .drop-indicator {
    position: relative;
    transition: all 0.2s ease-in-out;
  }

  .drop-indicator.can-drop:hover {
    transform: translateY(-2px);
    box-shadow: 0 0 15px rgba(245, 158, 11, 0.4);
  }

  .drop-indicator.can-drop:hover::after {
    content: '↓';
    position: absolute;
    top: -25px;
    left: 50%;
    transform: translateX(-50%);
    font-size: 18px;
    color: var(--selected-border);
    font-weight: bold;
    z-index: 20;
    animation: dropPulse 1s infinite;
  }

  .drop-indicator.can-drop:hover::before {
    content: '';
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    border: 2px dashed var(--selected-border);
    border-radius: calc(var(--card-radius) + 2px);
    opacity: 0.8;
    z-index: 15;
    animation: borderPulse 1.5s infinite;
  }

  @keyframes dropPulse {
    0%,
    100% {
      opacity: 0.6;
      transform: translateX(-50%) translateY(0);
    }
    50% {
      opacity: 1;
      transform: translateX(-50%) translateY(-3px);
    }
  }

  @keyframes borderPulse {
    0%,
    100% {
      opacity: 0.4;
    }
    50% {
      opacity: 0.8;
    }
  }

  .card-corner-number {
    position: absolute;
    top: 4px;
    left: 6px;
    font-size: 12px;
    font-weight: bold;
  }

  .card.back * {
    @apply text-4xl;
  }
  .card.back .card-corner-number {
    @apply invisible;
  }

  .placeholder {
    width: 70px;
    height: 100px;
    border: 2px dashed var(--card-border);
    border-radius: var(--card-radius);
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 18px;
    color: var(--card-border);
    cursor: pointer;
  }

  .hand,
  .discard-piles,
  .build-piles,
  .hand-area {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    justify-content: center;
  }

  .discard-piles,
  .build-piles,
  .hand-area {
    width: 310px; /* 4 cards + gaps */
  }

  /* Responsive layout for small screens - discard piles wrap under stock and hand */
  @media (max-width: 640px) {
    .player-area {
      flex-wrap: wrap;
    }

    .player-area .discard-piles {
      width: 100%;
      margin-top: 20px;
    }
  }

  .hand-area {
    height: 100px; /* 1 card */
  }

  .hand-area.overlap-hand {
    position: relative;
  }

  .hand-area.overlap-hand .card {
    position: absolute;
    top: 0;
  }

  .hand-area:not(.overlap-hand) {
    display: flex;
    gap: 10px;
    justify-content: center;
  }

  .discard-pile-stack {
    position: relative;
  }

  .card,
  .discard-pile-stack {
    width: 70px;
  }

  .discard-pile-stack .card,
  .discard-pile-stack .placeholder {
    position: absolute;
    left: 0;
    top: 0;
    box-shadow: var(--card-shadow);
  }

  /* Ensure selected cards in discard piles show the selection shadow */
  .discard-pile-stack .card.selected {
    box-shadow: 0 4px 15px var(--selected-border);
  }

  /* Ensure hoverable cards in discard piles show the hover shadow */
  .discard-pile-stack .hoverable-card:hover {
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
  }

  /* Selected cards should always show selection shadow, even when hovered */
  .discard-pile-stack .card.selected.hoverable-card:hover {
    box-shadow: 0 4px 15px var(--selected-border);
  }

  /* Add support for offset stacking via inline style */
  .player-area,
  .center-area {
    padding: 20px;
    border: 2px solid transparent;
    border-radius: var(--card-radius);
    margin-bottom: 20px;
    background-color: var(--zone-bg-color);
    transition: border-color 0.3s;
  }

  .player-area.active-turn,
  .center-area.active-turn {
    border-color: var(--active-turn-color);
  }

  /* Theme-specific special effects */
  .metro .card.back {
    background: linear-gradient(
      45deg,
      #00a3a3 25%,
      #004d4d 25%,
      #004d4d 50%,
      #00a3a3 50%,
      #00a3a3 75%,
      #004d4d 75%,
      #004d4d
    );
    background-size: 8px 8px;
  }

  .neon .card {
    box-shadow: 0 0 5px var(--card-border);
    border: 2px solid var(--card-border);
  }

  .neon .card.back {
    box-shadow: 0 0 15px var(--deck-bg);
    border: 2px solid var(--deck-bg);
  }

  .neon .card.selected {
    box-shadow: 0 0 20px var(--selected-border);
  }

  .neon .discard-pile-stack .card.selected {
    box-shadow: 0 0 20px var(--selected-border);
  }

  .neon .discard-pile-stack .hoverable-card:hover {
    box-shadow: 0 0 15px rgba(0, 255, 136, 0.4);
  }

  /* Selected cards in neon theme should always show selection shadow, even when hovered */
  .neon .discard-pile-stack .card.selected.hoverable-card:hover {
    box-shadow: 0 0 20px var(--selected-border);
  }

  .retro .card {
    box-shadow: 3px 3px 0 var(--card-border);
    border: 2px solid var(--card-border);
  }

  .vertical-text {
    @apply transform rotate-180;
    writing-mode: vertical-rl;
  }
}



@layer base {
  * {
    @apply border-border;
  }
}